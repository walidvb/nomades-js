!!!
%html{:lang => "fr"}
	%head
	%meta{:content => "text/html; charset=utf-8", "http-equiv" => "content-type"}
	%link{:href => "style.css", :rel => "stylesheet", :type => "text/css"}
	%link{:href => "http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.0.3/css/bootstrap.min.css", :rel => "stylesheet", :type => "text/css"}
	%script{:src => "http://cdnjs.cloudflare.com/ajax/libs/jquery/2.0.3/jquery.min.js", :type => "text/javascript"}
	%script{:src => "http://cdnjs.cloudflare.com/ajax/libs/angular.js/1.2.7/angular.min.js", :type => "text/javascript"}
	%script{:src => "http://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.0.3/js/bootstrap.min.js", :type => "text/javascript"}
	:javascript
		$('nav a').click(function (e) {
		e.preventDefault()
		$(this).tab('show')
		});
		$('#myCollapsible').collapse({
			toggle: false
		});
	%title Cours Javascript
	%body{"ng-app" => true}
	
	%nav.navbar.navbar-default.navbar-fixed-top

		%ul.navbar-nav.nav
			%li
				%a.navbar-brand 
					Cours Javascript
			%li
				%a{:href => "index.html"} Théorie
			%li
				%a{:href => "examples.html"} Exemples
			%li
				%a{:href => "exercises.html"} Exercices
			%li
				%a{:href => "resources.html"} Resources
			%li.dropdown
				%a.dropdown-toggle{"data-toggle" => "dropdown", :href => "#"}
					Plus
					%b.caret
				%ul.dropdown-menu
					%li
						%a{:href => "wolf.html"} Le loup
	.container
		.col-md-12
			.panel-group
				.panel.panel-default
					.panel-heading
						%div{"data-toggle" => "collapse", "data-target" => "#exos-monday"}
							%h3 Organigramme
					.collapse.panel-collapse.panel-body#exos-monday
						
						.correction
							.btn.btn-sm.btn-success{"data-toggle" => "collapse", "data-target" => "#train"} Corrigé
							.well.well-sm#train.collapse  
								asdas
						%h4 Exercice 1:
						Dessinez lʼorganigramme dʼun retrait à un bancomat
						%h4 Exercice 2:
						Dessinez quelques organigrammes nécessaires à site de e-commerce

				.panel.panel-default
					.panel-heading
						%div{"data-toggle" => "collapse", "data-target" => "#exos-tuesday"}
							%h3 Syntaxe 1
					.collapse.panel-collapse.panel-body#exos-tuesday.in
						%h4 Exercice 1:
						.col-md-12
							Afficher dans une boucle les nombres de 1 à 100 (un nombre par ligne):
							%br
							1
							%br
							2
							%br
							3
							%br
							4
							%br
							\... 
							%br
							100
						%h4 Exercice 2:
						.col-md-12
							Afficher dans une boucle les nombres paires de 1 à 100 (un nombre par ligne):
							%br
							2
							%br
							4
							%br
							6
							%br
							8
							%br
							\... 
							%br
							100
						%h4 Exercice 3:
						.col-md-12
							Afficher le tableau de multiplication suivant( 
							%a{:href => 'http://jsfiddle.net/walidvb/FLq3f/'} base 
							):
							%table{:border => "1"}
								%tbody
									%tr
										%td 1
										%td 2
										%td 3
										%td 4
										%td 5
										%td 6
										%td 7
										%td 8
										%td 9
										%td 10
									%tr
										%td 2
										%td 4
										%td 6
										%td 8
										%td 10
										%td 12
										%td 14
										%td 16
										%td 18
										%td 20
									%tr
										%td 3
										%td 6
										%td 9
										%td 12
										%td 15
										%td 18
										%td 21
										%td 24
										%td 27
										%td 30
									%tr
										%td 4
										%td 8
										%td 12
										%td 16
										%td 20
										%td 24
										%td 28
										%td 32
										%td 36
										%td 40
									%tr
										%td 5
										%td 10
										%td 15
										%td 20
										%td 25
										%td 30
										%td 35
										%td 40
										%td 45
										%td 50
									%tr
										%td 6
										%td 12
										%td 18
										%td 24
										%td 30
										%td 36
										%td 42
										%td 48
										%td 54
										%td 60
									%tr
										%td 7
										%td 14
										%td 21
										%td 28
										%td 35
										%td 42
										%td 49
										%td 56
										%td 63
										%td 70
									%tr
										%td 8
										%td 16
										%td 24
										%td 32
										%td 40
										%td 48
										%td 56
										%td 64
										%td 72
										%td 80
									%tr
										%td 9
										%td 18
										%td 27
										%td 36
										%td 45
										%td 54
										%td 63
										%td 72
										%td 81
										%td 90
									%tr
										%td 10
										%td 20
										%td 30
										%td 40
										%td 50
										%td 60
										%td 70
										%td 80
										%td 90
										%td 100

							.alert.alert-info 
								%em Tip:
								pour ajouter un élément dans la page html, utiliser 
								%code 
									:escaped
										document.write('<td>');
								%code 
									document.write('
									:escaped
										<tr>myValue</tr>');
								%code 
									:escaped
										document.write('</td>');

							
						.col-md-12
							%h4 
								Exercice 4
								%a{:href => "http://jsfiddle.net/Zm2KD/"} 
									%em (base)
							%p 
								Créer une fonction qui vérifie quʼune valeur est bien une année de naissance valide: 
								%br
								a) Cʼest une valeur numérique
								%br
								b) La valeur est comprise entre 1900 et 2010
							%p
								La fonction retourne true ou false
								%br
								Utiliser la fonction avec des années de naissance correctes et incorrectes en affichant un message correspondant.
								%br
								%em Exemple:
								%br
								La valeur abcd nʼest pas une année de naissance valide. La valeur 999 nʼest pas une année de naissance valide La valeur 1999 est une année de naissance valide
						.col-md-12
							%h4
								Exercice 5
							%p Créer un objet ascenseur, qui  posséde les attributs suivants: étage actuel, poids maximal, nombre d'étages, état de la porte(ouvert/fermé), liste d'étage("Rez: Cafétéria", "1er: Bureau", "2ème: Salle de Gym", "3eme: Barbeque")
							%p 
								Créez une fonction qui décrit l'ascenseur: "Cet ascenseur possède 3 étages: "Rez: Cafétéria, 1er: Bureau, 2ème: Salle de Gym, 3eme: Barbeque, et sa porte est fermée!
								%em 
									%span.glyphicon.glyphicon-cog 
									Tip: lisez la documentation sur  la structure de controle for(property in object)
							Rappel lexical

						%h3 Corrigé:
						:plain
							<iframe width="100%" height="300" src="http://jsfiddle.net/walidvb/s7hVQ/embedded/" allowfullscreen="allowfullscreen" frameborder="0"></iframe>
				.panel.panel-default
					.panel-heading
						%div{"data-toggle" => "collapse", "data-target" => "#exos-wednesday"}
							%h3 Syntaxe II
					.collapse.panel-collapse.panel-body#exos-wednesday.in
						%h4 Exercice 1
						%p 
							Créer un formulaire avec un champ de saisie «Votre nombre» et un bouton «Ok». Lorsque l’utilisateur clique sur le bouton «Ok», le script affiche dans une boite de dialogue la table de multiplication du nombre saisi.
							%br
							%em Si le nombre choisi est 7, alors on affichera 7 14 21 28 35 42 49 56 63 70
						%h4 Exercice 2
						%h5 a)
						%p
							Créer le formulaire suivant:
						Votre date de naissance:
						%input#age-input
						%button.btn.btn-md.btn-success{'onclick' => 'var year = parseInt(document.getElementById("age-input").value);document.getElementById("age-result").value = (typeof year == "number" && year < 2014 && year >= 1930) ? 2014 - year : "Invalid year"'} ok
						%br
						Votre âge:
						%input#age-result
						%br
						Lorsque l’utilisateur clique sur le bouton «Ok», le script calcule l’âge (2014 - année de naissance saisie)
						%h5 b)
						%p Ajouter une étape de validation: si l’année de naissance n’est pas valide, le script écrira «Année invalide» dans le champ texte «Votre age»
						%h4 Exercice 3
						%p 
							Réalisez une interface «Machine à Café» permettant de sélectionner les options suivantes:
							%br
							%em Type de boisson (un seul choix possible): 
							%ul
								%li Expresso
								%li Café allongé 
								%li Cappucino
								%li Chocolat
								%li Thé
								%li Bouillon
							%em Options supplémentaires (selon boisson choisie)
							%ul
								%li Grains moulus (uniquement expresso, café allongé et cappucino) 
								%li Sucre (sauf pour le bouillon)
								%li Lait (sauf pour le Cappucino, le chocolat et le bouillon)
								%li Sans gobelet (l’utilisateur a son propre récipient)
							%h5 a)
							Les options sont «grisées/désactivées» selon la boisson choisie.
							%br
							L’interface résume au fur et à mesure les choix:
							%br
							«Vous avez sélectionné un café, grains moulus, sans sucre, avec gobelet» «Vous avez sélectionné un thé, avec sucre, avec lait, sans gobelet»
							%h5 b)
							Le montant à payer est calculé et affiché selon les choix. 
							%em Liste des prix:
							%ul
								%li Toutes les boissons sauf bouillon: 1.-
								%li Bouillon: 1.30
								%li Grains moulus: 20 centimes 
								%li Sucre: gratuit
								%li Lait: 10 centimes
								%li Sans gobelet: - 10 centimes
							%h5 c)
							Ajouter un bouton «confirmer», lorsque l’utilisateur clique sur le bouton, une animation affiche le gobelet qui se remplit peu à peu avec la préparation, et affiche un message final: «votre boisson est prête».